/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestERC721, TestERC721Interface } from "../TestERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600481526020016315195cdd60e21b81525060405180604001604052806004815260200163151154d560e21b81525081600090805190602001906200006492919062000083565b5080516200007a90600190602084019062000083565b50505062000166565b828054620000919062000129565b90600052602060002090601f016020900481019282620000b5576000855562000100565b82601f10620000d057805160ff191683800117855562000100565b8280016001018555821562000100579182015b8281111562000100578251825591602001919060010190620000e3565b506200010e92915062000112565b5090565b5b808211156200010e576000815560010162000113565b6002810460018216806200013e57607f821691505b602082108114156200016057634e487b7160e01b600052602260045260246000fd5b50919050565b6116ac80620001766000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636a6278421161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f576100ea565b80636a6278421461019b57806370a08231146101ae57806395d89b41146101ce576100ea565b8063095ea7b3116100c8578063095ea7b31461014d57806323b872dd1461016257806342842e0e146101755780636352211e14610188576100ea565b806301ffc9a7146100ef57806306fdde0314610118578063081812fc1461012d575b600080fd5b6101026100fd366004610f4b565b610222565b60405161010f9190611046565b60405180910390f35b6101206102cc565b60405161010f9190611051565b61014061013b366004610f83565b61035e565b60405161010f9190610ff6565b61016061015b366004610f22565b6103aa565b005b610160610170366004610de1565b610442565b610160610183366004610de1565b61047a565b610140610196366004610f83565b610495565b6101606101a9366004610d95565b6104ca565b6101c16101bc366004610d95565b6104d8565b60405161010f9190611506565b61012061051c565b6101606101e4366004610ee8565b61052b565b6101606101f7366004610e1c565b610617565b61012061020a366004610f83565b610656565b61010261021d366004610daf565b6106d9565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102b557507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806102c457506102c482610707565b90505b919050565b6060600080546102db9061157e565b80601f01602080910402602001604051908101604052809291908181526020018280546103079061157e565b80156103545780601f1061032957610100808354040283529160200191610354565b820191906000526020600020905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b600061036982610751565b61038e5760405162461bcd60e51b815260040161038590611335565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b582610495565b9050806001600160a01b0316836001600160a01b031614156103e95760405162461bcd60e51b81526004016103859061144c565b806001600160a01b03166103fb61076e565b6001600160a01b0316148061041757506104178161021d61076e565b6104335760405162461bcd60e51b8152600401610385906111e9565b61043d8383610772565b505050565b61045361044d61076e565b826107ed565b61046f5760405162461bcd60e51b8152600401610385906114a9565b61043d838383610872565b61043d83838360405180602001604052806000815250610617565b6000818152600260205260408120546001600160a01b0316806102c45760405162461bcd60e51b8152600401610385906112a3565b6104d58160006109ac565b50565b60006001600160a01b0382166105005760405162461bcd60e51b815260040161038590611246565b506001600160a01b031660009081526003602052604090205490565b6060600180546102db9061157e565b61053361076e565b6001600160a01b0316826001600160a01b031614156105645760405162461bcd60e51b815260040161038590611155565b806005600061057161076e565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091556105d361076e565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161060b9190611046565b60405180910390a35050565b61062861062261076e565b836107ed565b6106445760405162461bcd60e51b8152600401610385906114a9565b61065084848484610a98565b50505050565b606061066182610751565b61067d5760405162461bcd60e51b8152600401610385906113ef565b6000610687610acb565b905060008151116106a757604051806020016040528060008152506106d2565b806106b184610add565b6040516020016106c2929190610fc7565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b6000908152600260205260409020546001600160a01b0316151590565b3390565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906107b482610495565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006107f882610751565b6108145760405162461bcd60e51b81526004016103859061118c565b600061081f83610495565b9050806001600160a01b0316846001600160a01b0316148061085a5750836001600160a01b031661084f8461035e565b6001600160a01b0316145b8061086a575061086a81856106d9565b949350505050565b826001600160a01b031661088582610495565b6001600160a01b0316146108ab5760405162461bcd60e51b815260040161038590611392565b6001600160a01b0382166108d15760405162461bcd60e51b8152600401610385906110f8565b6108dc83838361043d565b6108e7600082610772565b6001600160a01b038316600090815260036020526040812080546001929061091090849061153b565b90915550506001600160a01b038216600090815260036020526040812080546001929061093e90849061150f565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166109d25760405162461bcd60e51b815260040161038590611300565b6109db81610751565b156109f85760405162461bcd60e51b8152600401610385906110c1565b610a046000838361043d565b6001600160a01b0382166000908152600360205260408120805460019290610a2d90849061150f565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610aa3848484610872565b610aaf84848484610c2c565b6106505760405162461bcd60e51b815260040161038590611064565b60408051602081019091526000815290565b606081610b1e575060408051808201909152600181527f300000000000000000000000000000000000000000000000000000000000000060208201526102c7565b8160005b8115610b485780610b32816115b9565b9150610b419050600a83611527565b9150610b22565b60008167ffffffffffffffff811115610b7157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610b9b576020820181803683370190505b5090505b841561086a57610bb060018361153b565b9150610bbd600a866115f2565b610bc890603061150f565b60f81b818381518110610beb57634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610c25600a86611527565b9450610b9f565b6000610c40846001600160a01b0316610d78565b15610d6d57836001600160a01b031663150b7a02610c5c61076e565b8786866040518563ffffffff1660e01b8152600401610c7e949392919061100a565b602060405180830381600087803b158015610c9857600080fd5b505af1925050508015610cc8575060408051601f3d908101601f19168201909252610cc591810190610f67565b60015b610d22573d808015610cf6576040519150601f19603f3d011682016040523d82523d6000602084013e610cfb565b606091505b508051610d1a5760405162461bcd60e51b815260040161038590611064565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a020000000000000000000000000000000000000000000000000000000014905061086a565b506001949350505050565b3b151590565b80356001600160a01b03811681146102c757600080fd5b600060208284031215610da6578081fd5b6106d282610d7e565b60008060408385031215610dc1578081fd5b610dca83610d7e565b9150610dd860208401610d7e565b90509250929050565b600080600060608486031215610df5578081fd5b610dfe84610d7e565b9250610e0c60208501610d7e565b9150604084013590509250925092565b60008060008060808587031215610e31578081fd5b610e3a85610d7e565b93506020610e49818701610d7e565b935060408601359250606086013567ffffffffffffffff80821115610e6c578384fd5b818801915088601f830112610e7f578384fd5b813581811115610e9157610e91611632565b60405184601f19601f8401168201018181108482111715610eb457610eb4611632565b60405281815283820185018b1015610eca578586fd5b81858501868301379081019093019390935250939692955090935050565b60008060408385031215610efa578182fd5b610f0383610d7e565b915060208301358015158114610f17578182fd5b809150509250929050565b60008060408385031215610f34578182fd5b610f3d83610d7e565b946020939093013593505050565b600060208284031215610f5c578081fd5b81356106d281611648565b600060208284031215610f78578081fd5b81516106d281611648565b600060208284031215610f94578081fd5b5035919050565b60008151808452610fb3816020860160208601611552565b601f01601f19169290920160200192915050565b60008351610fd9818460208801611552565b835190830190610fed818360208801611552565b01949350505050565b6001600160a01b0391909116815260200190565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261103c6080830184610f9b565b9695505050505050565b901515815260200190565b6000602082526106d26020830184610f9b565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527f63656976657220696d706c656d656e7465720000000000000000000000000000606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560408201527f726f206164647265737300000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560408201527f7200000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60408201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606082015260800190565b90815260200190565b6000821982111561152257611522611606565b500190565b6000826115365761153661161c565b500490565b60008282101561154d5761154d611606565b500390565b60005b8381101561156d578181015183820152602001611555565b838111156106505750506000910152565b60028104600182168061159257607f821691505b602082108114156115b357634e487b7160e01b600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115eb576115eb611606565b5060010190565b6000826116015761160161161c565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146104d557600080fdfea26469706673582212202b196530bbfd9f397c8e25e510192e593ef6c9eeb9bf77c0f0a0385e56b3cf6364736f6c63430008000033";

export class TestERC721__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC721> {
    return super.deploy(overrides || {}) as Promise<TestERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestERC721 {
    return super.attach(address) as TestERC721;
  }
  connect(signer: Signer): TestERC721__factory {
    return super.connect(signer) as TestERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC721Interface {
    return new utils.Interface(_abi) as TestERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC721 {
    return new Contract(address, _abi, signerOrProvider) as TestERC721;
  }
}
